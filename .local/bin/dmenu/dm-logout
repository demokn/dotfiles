#!/usr/bin/env bash
#
# dm-logout
# Description: Logout, shutdown, reboot or lock screen.

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail
set -x

logout() {
    case $1 in
        'dwm')
            killall dwm

            ;;
        'Xfwm4')
            if command -v xfce4-session-logout >/dev/null 2>&1; then
                xfce4-session-logout --logout
            else
                pkill xfce4
            fi

            ;;
        *)
            pkill $1 || echo "Not support to logout WM $1"

            ;;
    esac
}

lock() {
    case $1 in
        'dwm')
            slock &
            xset dpms force off

            ;;
        'Xfwm4')
            if command -v xflock4 >/dev/null 2>&1; then
                xflock4
            else
                slock
            fi

            ;;
        *)
            slock

            ;;
    esac
}

main() {
    # An array of options to choose.
    declare -a options=(
        "🔒 lock"
        "🚪 logout"
        #"🐻 hibernate" # I have no swap space
        "💤 sleep"
        "♻️ reboot"
        "🖥️ shutdown"
        "✖️ cancel")

    # determine which window manager is running
    local manager=$(xprop -id $(xprop -root -notype | awk '$1=="_NET_SUPPORTING_WM_CHECK:"{printf $5}') -notype -f _NET_WM_NAME 8t | grep "_NET_WM_NAME = " | cut -d' ' -f3 | cut -d'"' -f2)

    # Piping the above array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${options[@]}" | dmenu -i -p 'Shutdown menu:' "${@}")

    # What to do when/if we choose one of the options.
    case $choice in
        '🔒 lock')
            lock $manager
            ;;
        '🚪 logout')
            logout $manager
            ;;
        '🐻 hibernate')
            lock $manager
            systemctl hibernate
            ;;
        '💤 sleep')
            lock $manager
            systemctl suspend
            ;;
        '♻️ reboot')
            systemctl reboot
            ;;
        '🖥️ shutdown')
            systemctl poweroff
            ;;
        '✖️ cancel')
            exit 0
            ;;
        *)
            # It is a common practice to use the wildcard asterisk symbol (*) as a final
            # pattern to define the default case. This pattern will always match.
            exit 0
            ;;
    esac
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
