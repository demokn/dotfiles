#!/usr/bin/env bash
#
# dm-logout
# Description: Logout, shutdown, reboot or lock screen.

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

main() {
    # An array of options to choose.
    declare -a options=(
    "Lock screen"
    "Logout"
    "Reboot"
    "Shutdown"
    "Suspend"
    "Cancel")

	# look up what managers are used (makes it more dynamic)
    declare -a MANAGERS
    while IFS= read -r manager
    do
        MANAGERS+=("${manager,,}")
    done < <(grep 'Name' /usr/share/xsessions/*.desktop | awk -F"=" '{print $2}')

    # Piping the above array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${options[@]}" | dmenu -i -p 'Shutdown menu:' "${@}")

	# What to do when/if we choose one of the options.
	case $choice in
		'Logout')
			for manager in "${MANAGERS[@]}"; do 
				killall "${manager}" || output "Process ${manager} was not running."
			done
			;;
		'Lock screen')
			slock
			;;
		'Reboot')
			systemctl reboot
			;;
		'Shutdown')
			systemctl poweroff
			;;
		'Suspend')
			systemctl suspend
			;;
		'Cancel')
			exit 0
			;;
			# It is a common practice to use the wildcard asterisk symbol (*) as a final
			# pattern to define the default case. This pattern will always match.
		*)
			exit 0
			;;
	esac
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
